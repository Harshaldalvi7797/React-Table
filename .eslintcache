[{"E:\\react\\table-react\\src\\index.js":"1","E:\\react\\table-react\\src\\App.js":"2","E:\\react\\table-react\\src\\reportWebVitals.js":"3","E:\\react\\table-react\\src\\components\\BasicTable.js":"4","E:\\react\\table-react\\src\\components\\Columns.js":"5","E:\\react\\table-react\\src\\components\\SortingTable.js":"6","E:\\react\\table-react\\src\\components\\FiltertingTable.js":"7","E:\\react\\table-react\\src\\components\\GlobalFilter.js":"8","E:\\react\\table-react\\src\\components\\ColumnFilter.js":"9","E:\\react\\table-react\\src\\components\\PaginationTable.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":334,"mtime":1611565087959,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2648,"mtime":1611497064163,"results":"15","hashOfConfig":"12"},{"size":2272,"mtime":1611501415816,"results":"16","hashOfConfig":"12"},{"size":3008,"mtime":1611498113562,"results":"17","hashOfConfig":"12"},{"size":2696,"mtime":1611563454911,"results":"18","hashOfConfig":"12"},{"size":518,"mtime":1611560106707,"results":"19","hashOfConfig":"12"},{"size":342,"mtime":1611560133192,"results":"20","hashOfConfig":"12"},{"size":3716,"mtime":1611576357598,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1b44f30",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\table-react\\src\\index.js",[],["45","46"],"E:\\react\\table-react\\src\\App.js",["47","48","49"],"E:\\react\\table-react\\src\\reportWebVitals.js",[],"E:\\react\\table-react\\src\\components\\BasicTable.js",["50"],"import React, { useMemo } from 'react'\r\nimport { useTable } from \"react-table\"\r\nimport Mock_Data from \"./MOCK_DATA.json\";\r\nimport { COLUMNS, GROUPED_COLUMNS } from \"./Columns\";\r\nimport \"./table.css\";\r\n\r\nconst BasicTable = () => {\r\n\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => Mock_Data, [])\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    })\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, footerGroups } = tableInstance;\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>\r\n                                                {\r\n                                                    cell.render(\"Cell\")\r\n                                                }\r\n\r\n                                            </td>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </tbody>\r\n            <tfoot>\r\n                {\r\n                    footerGroups.map(footerGroup =>\r\n                        (\r\n                            <tr {...footerGroup}>\r\n                                {footerGroup.headers.map(column => (\r\n                                    <td {...column.getFooterProps}>\r\n                                        {\r\n                                            column.render(\"Footer\")\r\n                                        }\r\n\r\n                                    </td>\r\n\r\n                                ))\r\n                                }\r\n\r\n                            </tr>\r\n                        ))\r\n\r\n                }\r\n\r\n            </tfoot>\r\n        </table>\r\n    )\r\n}\r\nexport default BasicTable;","E:\\react\\table-react\\src\\components\\Columns.js",[],"E:\\react\\table-react\\src\\components\\SortingTable.js",["51"],"import React, { useMemo } from 'react'\r\nimport { useTable, useSortBy } from \"react-table\"\r\nimport Mock_Data from \"./MOCK_DATA.json\";\r\nimport { COLUMNS, GROUPED_COLUMNS } from \"./Columns\";\r\nimport \"./table.css\";\r\n\r\nconst SortingTable = () => {\r\n\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => Mock_Data, [])\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    }, useSortBy)\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, footerGroups } = tableInstance;\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render('Header')}\r\n                            \r\n                            <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ðŸ”½'\r\n                        : ' ðŸ”¼'\r\n                      : ''}\r\n                  </span>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>\r\n                                                {\r\n                                                    cell.render(\"Cell\")\r\n                                                }\r\n\r\n                                            </td>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </tbody>\r\n            <tfoot>\r\n                {\r\n                    footerGroups.map(footerGroup =>\r\n                        (\r\n                            <tr {...footerGroup}>\r\n                                {footerGroup.headers.map(column => (\r\n                                    <td {...column.getFooterProps}>\r\n                                        {\r\n                                            column.render(\"Footer\")\r\n                                        }\r\n\r\n                                    </td>\r\n\r\n                                ))\r\n                                }\r\n\r\n                            </tr>\r\n                        ))\r\n\r\n                }\r\n\r\n            </tfoot>\r\n        </table>\r\n    )\r\n}\r\nexport default SortingTable;","E:\\react\\table-react\\src\\components\\FiltertingTable.js",["52"],"E:\\react\\table-react\\src\\components\\GlobalFilter.js",[],"E:\\react\\table-react\\src\\components\\ColumnFilter.js",[],"E:\\react\\table-react\\src\\components\\PaginationTable.js",["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":18},{"ruleId":"59","severity":1,"message":"64","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":4,"column":19,"nodeType":"61","messageId":"62","endLine":4,"endColumn":34},{"ruleId":"59","severity":1,"message":"65","line":4,"column":19,"nodeType":"61","messageId":"62","endLine":4,"endColumn":34},{"ruleId":"59","severity":1,"message":"66","line":13,"column":11,"nodeType":"61","messageId":"62","endLine":13,"endColumn":24},{"ruleId":"59","severity":1,"message":"65","line":4,"column":19,"nodeType":"61","messageId":"62","endLine":4,"endColumn":34},{"ruleId":"59","severity":1,"message":"67","line":16,"column":61,"nodeType":"61","messageId":"62","endLine":16,"endColumn":65},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BasicTable' is defined but never used.","'SortingTable' is defined but never used.","'GROUPED_COLUMNS' is defined but never used.","'defaultColumn' is assigned a value but never used.","'rows' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]