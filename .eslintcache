[{"E:\\react\\table-react\\src\\index.js":"1","E:\\react\\table-react\\src\\App.js":"2","E:\\react\\table-react\\src\\reportWebVitals.js":"3","E:\\react\\table-react\\src\\components\\BasicTable.js":"4","E:\\react\\table-react\\src\\components\\Columns.js":"5","E:\\react\\table-react\\src\\components\\SortingTable.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":301,"mtime":1611498174162,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2648,"mtime":1611497064163,"results":"11","hashOfConfig":"8"},{"size":2157,"mtime":1611496926951,"results":"12","hashOfConfig":"8"},{"size":3008,"mtime":1611498113562,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1b44f30",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\table-react\\src\\index.js",[],["28","29"],"E:\\react\\table-react\\src\\App.js",["30","31"],"E:\\react\\table-react\\src\\reportWebVitals.js",[],"E:\\react\\table-react\\src\\components\\BasicTable.js",["32"],"import React, { useMemo } from 'react'\r\nimport { useTable } from \"react-table\"\r\nimport Mock_Data from \"./MOCK_DATA.json\";\r\nimport { COLUMNS, GROUPED_COLUMNS } from \"./Columns\";\r\nimport \"./table.css\";\r\n\r\nconst BasicTable = () => {\r\n\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => Mock_Data, [])\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    })\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, footerGroups } = tableInstance;\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>\r\n                                                {\r\n                                                    cell.render(\"Cell\")\r\n                                                }\r\n\r\n                                            </td>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </tr>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </tbody>\r\n            <tfoot>\r\n                {\r\n                    footerGroups.map(footerGroup =>\r\n                        (\r\n                            <tr {...footerGroup}>\r\n                                {footerGroup.headers.map(column => (\r\n                                    <td {...column.getFooterProps}>\r\n                                        {\r\n                                            column.render(\"Footer\")\r\n                                        }\r\n\r\n                                    </td>\r\n\r\n                                ))\r\n                                }\r\n\r\n                            </tr>\r\n                        ))\r\n\r\n                }\r\n\r\n            </tfoot>\r\n        </table>\r\n    )\r\n}\r\nexport default BasicTable;","E:\\react\\table-react\\src\\components\\Columns.js",[],"E:\\react\\table-react\\src\\components\\SortingTable.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":18},{"ruleId":"38","severity":1,"message":"43","line":4,"column":19,"nodeType":"40","messageId":"41","endLine":4,"endColumn":34},{"ruleId":"38","severity":1,"message":"43","line":4,"column":19,"nodeType":"40","messageId":"41","endLine":4,"endColumn":34},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BasicTable' is defined but never used.","'GROUPED_COLUMNS' is defined but never used.","no-global-assign","no-unsafe-negation"]